{"version":3,"sources":["helpers/index.js","components/Header/index.js","components/Navigator/index.js","utils/Button/index.js","config/firebase.js","utils/Modal/index.js","firebase/firebaseService.js","components/Home/ScheduleSession/index.js","components/Home/SessionList/index.js","components/Home/index.js","components/SessionRoom/ParticipantList/index.js","components/SessionRoom/HaltAttendance/index.js","components/SessionRoom/index.js","components/Report/DetailReport/index.js","components/Report/DetailWrapper/index.js","components/Report/index.js","components/ContentHolder/index.js","components/LandingPage/index.js","components/Login/index.js","store/auth-context.js","App.js","reportWebVitals.js","index.js"],"names":["getIcons","iconName","props","Icon","MenuIcon","ComputerIcon","DashboardIcon","AssignmentIcon","DateRangeIcon","AccessAlarmIcon","Dot","FiberManualRecordIcon","RemoveUser","PersonAddDisabledIcon","Details","FindInPageIcon","Session","DevicesIcon","User","AccountCircleIcon","getTitle","titleName","className","getTitleSm","getTime","timeString","Date","toLocaleTimeString","timeZone","hour12","hour","minute","useStyles","makeStyles","theme","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","display","toolbar","alignItems","justifyContent","padding","spacing","mixins","Header","handleNavigation","openNav","classes","useTheme","console","log","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","localStorage","getItem","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","Menu","name","path","icon","Navigator","Drawer","paper","direction","Divider","List","map","item","index","activeClassName","to","ListItem","button","ListItemIcon","ListItemText","primary","Btn","Button","children","defaultProps","firebaseApp","db","Modal","headerTitle","textCOnfirm","textCancel","handleConfirm","handleClose","openModal","fullScreen","useMediaQuery","down","Dialog","fullWidth","maxWidth","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogActions","autoFocus","React","memo","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firestore","addEmployee","empId","empName","a","collection","doc","set","frstrResp","checkEmployee","docRef","get","res","exists","data","undefined","addSession","user","sessionId","sessionName","startDate","startTime","endDate","endTime","ownerName","ownerId","status","getParticipantLive","updateSessionStatus","update","markPresent","getSessionDetails","removeParticipant","participantId","delete","getSessionReport","collectionGroup","where","orderBy","result","sessionList","length","forEach","push","ScheduleSession","useState","setOpen","setStartDate","setEndDate","sessionNameRef","useRef","errorRef","closeModal","useCallback","handleStartDate","date","handleEndDate","handleConfirmSession","current","value","trim","innerHTML","toDateString","formData","size","Box","flexDirection","TextField","label","multiline","rows","inputRef","utils","DateFnsUtils","margin","onChange","KeyboardButtonProps","ref","style","SessionList","history","useHistory","setSessionList","userId","getLiveSessionData","todayDate","onSnapshot","querySnapShot","useEffect","startSession","setItem","Grid","container","xs","sm","mb","gutterBottom","toTimeString","split","Card","elevation","CardHeader","avatar","Avatar","title","subheader","pb","pr","p","disabled","Home","Paper","mx","px","ParticipantList","participantsList","setParticipantList","openAttendance","setOpenAttendance","selectedParticipant","setSelectedParticipant","markAbsent","participantList","getLiveParticipantsList","paddingTop","paddingLeft","ListItemSecondaryAction","HaltAttendance","halt","setHalt","SessionRoom","sessionDetails","setSessionDetails","getSessionDetailFunc","getSessionStatusOnlineLive","removeItem","closeAndRedirectHome","closeSession","exitSession","find","el","Object","keys","mt","DetailReport","session","pList","paddingRight","DetailWrapper","openDetails","setOpenDetails","setPlist","getParicipantList","snapShot","pListTemp","handleOpenReport","right","Report","reportList","setReportList","GetSessionReportData","reportListObj","reverse","Number","ListItemAvatar","minWidth","content","flexGrow","ContentHolder","Landing","setOpenNav","handleNavigationState","val","Copyright","align","Link","href","getFullYear","marginTop","backgroundColor","palette","secondary","main","form","submit","Login","onLoginFunc","loginFormHandler","event","preventDefault","employeeName","employeeId","checkResult","Container","component","CssBaseline","onSubmit","required","type","AuthContext","createContext","AuthContextProvider","isLoggedIn","setIsLoggedIn","Provider","onLogin","App","ctx","useContext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d58ed11.chunk.js","sourcesContent":["import React from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\r\nimport DevicesIcon from '@material-ui/icons/Devices';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nexport const getIcons = (iconName, props) => {\r\n    const components = {\r\n        MenuIcon: MenuIcon,\r\n        ComputerIcon: ComputerIcon,\r\n        DashboardIcon: DashboardIcon,\r\n        AssignmentIcon: AssignmentIcon,\r\n        DateRangeIcon: DateRangeIcon,\r\n        AccessAlarmIcon: AccessAlarmIcon,\r\n        Dot: FiberManualRecordIcon,\r\n        RemoveUser: PersonAddDisabledIcon,\r\n        Details: FindInPageIcon,\r\n        Session: DevicesIcon,\r\n        User: AccountCircleIcon,\r\n    };\r\n    const Icon = components[iconName];\r\n    return <Icon {...props} />;\r\n};\r\n\r\nexport const getTitle = (titleName) => {\r\n    return (\r\n        <div className=\"textBg\">\r\n            <div>{titleName}</div>\r\n        </div>\r\n    );\r\n};\r\nexport const getTitleSm = (titleName) => {\r\n    return (\r\n        <div className=\"textSm\">\r\n            <div>{titleName}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const getTime = (timeString) => {\r\n    return new Date('1970-01-01T' + timeString + 'Z').toLocaleTimeString(\r\n        {},\r\n        { timeZone: 'UTC', hour12: true, hour: 'numeric', minute: 'numeric' }\r\n    );\r\n};\r\n","import React, { createRef } from 'react';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { getIcons } from './../../helpers';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n}));\r\n\r\nconst Header = ({ handleNavigation, openNav }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    console.log('Header rendered');\r\n    return (\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: openNav,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={() => handleNavigation(true)}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, {\r\n                        [classes.hide]: openNav,\r\n                    })}\r\n                >\r\n                    {getIcons('MenuIcon')}\r\n                </IconButton>\r\n                <Typography variant=\"h6\" noWrap>\r\n                    GuidePRO, {localStorage.getItem('employeeName')}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { getIcons } from './../../helpers';\r\nimport './index.css';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n}));\r\n\r\nconst Menu = [\r\n    {\r\n        name: 'Home',\r\n        path: '/Home',\r\n        icon: 'DashboardIcon',\r\n    },\r\n    {\r\n        name: 'Session Room',\r\n        path: '/SessionRoom',\r\n        icon: 'ComputerIcon',\r\n    },\r\n    {\r\n        name: 'My Reports',\r\n        path: '/Report',\r\n        icon: 'AssignmentIcon',\r\n    },\r\n];\r\n\r\nconst Navigator = ({ handleNavigation, openNav }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    console.log('Navigator rendered');\r\n    return (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: openNav,\r\n                [classes.drawerClose]: !openNav,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: openNav,\r\n                    [classes.drawerClose]: !openNav,\r\n                }),\r\n            }}\r\n        >\r\n            <div className={classes.toolbar}>\r\n                <IconButton onClick={() => handleNavigation(false)}>\r\n                    {theme.direction === 'rtl' ? (\r\n                        <ChevronRightIcon />\r\n                    ) : (\r\n                        <ChevronLeftIcon />\r\n                    )}\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                {Menu.map((item, index) => (\r\n                    <NavLink\r\n                        activeClassName={'activeNav'}\r\n                        to={item.path}\r\n                        key={index}\r\n                    >\r\n                        <ListItem button>\r\n                            <ListItemIcon>{getIcons(item.icon)}</ListItemIcon>\r\n                            <ListItemText primary={item.name} />\r\n                        </ListItem>\r\n                    </NavLink>\r\n                ))}\r\n            </List>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default Navigator;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Btn = (props) => {\r\n    return <Button {...props}>{props.children}</Button>;\r\n};\r\nBtn.propTypes = {\r\n    variant: PropTypes.string,\r\n    style: PropTypes.object,\r\n};\r\n\r\nBtn.defaultProps = {\r\n    variant: 'outlined',\r\n};\r\n\r\nexport default Btn;\r\n","/* eslint-disable no-restricted-globals */\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyCLTFKZT0D2t8UuejotDrARyowQ7DAP6oU',\r\n    authDomain: 'guidepro-1816f.firebaseapp.com',\r\n    projectId: 'guidepro-1816f',\r\n    storageBucket: 'guidepro-1816f.appspot.com',\r\n    messagingSenderId: '51910174014',\r\n    appId: '1:51910174014:web:24c91898e4f38bf353786f',\r\n    measurementId: 'G-P1DYSS49KV',\r\n};\r\n\r\nconst env = 'prod'; //dev/ prod\r\nlet firebaseApp;\r\nlet db;\r\n\r\nif (env === 'prod') {\r\n    firebaseApp = firebase.initializeApp(firebaseConfig);\r\n    db = firebaseApp.firestore();\r\n} else if (env === 'dev') {\r\n    firebase.initializeApp(firebaseConfig);\r\n    db = firebase.firestore();\r\n    if (location.hostname === 'localhost') {\r\n        db.useEmulator('localhost', 8080);\r\n    }\r\n}\r\n\r\nexport { db };\r\n","import React from 'react';\r\nimport Btn from './../Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst Modal = ({\r\n    headerTitle,\r\n    children,\r\n    textCOnfirm,\r\n    textCancel,\r\n    handleConfirm,\r\n    handleClose,\r\n    openModal,\r\n}) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    console.log('modal executed');\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            fullWidth={true}\r\n            maxWidth={'md'}\r\n            open={openModal}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"responsive-dialog-title\">\r\n                {headerTitle}\r\n            </DialogTitle>\r\n            <DialogContent>{children}</DialogContent>\r\n            <DialogActions>\r\n                <Btn\r\n                    autoFocus\r\n                    onClick={handleClose}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                >\r\n                    {textCancel}\r\n                </Btn>\r\n                <Btn\r\n                    onClick={handleConfirm}\r\n                    color=\"primary\"\r\n                    autoFocus\r\n                    variant=\"contained\"\r\n                >\r\n                    {textCOnfirm}\r\n                </Btn>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default React.memo(Modal);\r\n","import { db } from './../config/firebase';\r\n\r\n/*\r\nreturn true or false\r\n*/\r\nexport const addEmployee = async (empId, empName) => {\r\n    try {\r\n        let frstrResp = await db.collection('Users').doc(empId).set({\r\n            empName: empName,\r\n            empId: empId,\r\n        });\r\n        console.log('firestore response', frstrResp);\r\n        return true;\r\n    } catch (error) {\r\n        return false;\r\n    }\r\n};\r\n\r\n/*\r\nreturn undefined or data object\r\n*/\r\nexport const checkEmployee = async (empId) => {\r\n    const docRef = db.collection('Users').doc(empId);\r\n    const res = await docRef.get();\r\n    if (res.exists) {\r\n        return res.data();\r\n    } else {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const addSession = async ({\r\n    user,\r\n    sessionId,\r\n    sessionName,\r\n    startDate,\r\n    startTime,\r\n    endDate,\r\n    endTime,\r\n    ownerName,\r\n}) => {\r\n    try {\r\n        await db\r\n            .collection('Users')\r\n            .doc(user)\r\n            .collection('Sessions')\r\n            .doc(sessionId)\r\n            .set({\r\n                sessionId: sessionId,\r\n                sessionName: sessionName,\r\n                startDate: startDate,\r\n                startTime: startTime,\r\n                endDate: endDate,\r\n                endTime: endTime,\r\n                ownerName: ownerName,\r\n                ownerId: user,\r\n                status: 'off', //off,active,expired,closed\r\n            });\r\n        return true;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const getSessions = async () => {\r\n    const result = await db.collectionGroup('Sessions').get();\r\n    let sessionList = [];\r\n\r\n    result.forEach((doc) => {\r\n        sessionList.push(doc.data());\r\n    });\r\n    return sessionList;\r\n};\r\n\r\nexport const getSessionsLive = (todayDate) => {\r\n    return db.collectionGroup('Sessions').where('startDate', '==', todayDate);\r\n};\r\n\r\nexport const getParticipantLive = (sessionId) => {\r\n    return db.collection('Register').doc(sessionId).collection('Participants');\r\n};\r\n\r\nexport const getSessionStatusLive = (user, sessionId) => {\r\n    return db\r\n        .collection('Users')\r\n        .doc(user)\r\n        .collection('Sessions')\r\n        .doc(sessionId);\r\n};\r\n\r\nexport const updateSessionStatus = async (user, sessionId, status) => {\r\n    try {\r\n        await db\r\n            .collection('Users')\r\n            .doc(user)\r\n            .collection('Sessions')\r\n            .doc(sessionId)\r\n            .update({\r\n                status: status,\r\n            });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const markPresent = async (sessionId, user, empName) => {\r\n    try {\r\n        await db\r\n            .collection('Register')\r\n            .doc(sessionId)\r\n            .collection('Participants')\r\n            .doc(user)\r\n            .set({\r\n                empId: user,\r\n                empName: empName,\r\n            });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const getSessionDetails = async (ownerId, sessionId) => {\r\n    const docRef = await db\r\n        .collection('Users')\r\n        .doc(ownerId)\r\n        .collection('Sessions')\r\n        .doc(sessionId)\r\n        .get();\r\n    return docRef;\r\n};\r\n\r\nexport const removeParticipant = async (sessionId, participantId) => {\r\n    try {\r\n        await db\r\n            .collection('Register')\r\n            .doc(sessionId)\r\n            .collection('Participants')\r\n            .doc(participantId)\r\n            .delete();\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const getSessionReport = async (ownerId) => {\r\n    const result = await db\r\n        .collectionGroup('Sessions')\r\n        .where('ownerId', '==', ownerId)\r\n        .orderBy('startDate')\r\n        .get();\r\n\r\n    let sessionList = [];\r\n    if (result !== undefined || result.length !== 0) {\r\n        result.forEach((doc) => {\r\n            sessionList.push(doc.data());\r\n        });\r\n    }\r\n\r\n    return sessionList;\r\n};\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport Modal from './../../../utils/Modal';\r\nimport Btn from './../../../utils/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Box from '@material-ui/core/Box';\r\nimport { addSession, getSessions } from './../../../firebase/firebaseService';\r\n\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDateTimePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst ScheduleSession = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const sessionNameRef = useRef();\r\n    const errorRef = useRef();\r\n    const closeModal = useCallback(() => {\r\n        setOpen(false);\r\n    }, []);\r\n    const openModal = useCallback(() => {\r\n        setOpen(true);\r\n    }, []);\r\n    const handleStartDate = useCallback((date) => {\r\n        setStartDate(date);\r\n    }, []);\r\n    const handleEndDate = useCallback((date) => {\r\n        setEndDate(date);\r\n    }, []);\r\n    const handleConfirmSession = async () => {\r\n        //console.log(new Date(startDate.toDateString()).getTime());\r\n        if (sessionNameRef.current.value.trim() === '') {\r\n            errorRef.current.innerHTML = 'Session name cannot be blank !';\r\n        } else if (\r\n            new Date(startDate.toDateString()).getTime() >\r\n            new Date(endDate.toDateString()).getTime()\r\n        ) {\r\n            errorRef.current.innerHTML =\r\n                'Start date cannot be after end date !';\r\n        } else if (\r\n            new Date(startDate.toDateString()).getTime() <\r\n            new Date(new Date().toDateString()).getTime()\r\n        ) {\r\n            errorRef.current.innerHTML = 'Start date cannot be a past date !';\r\n        } else {\r\n            errorRef.current.innerHTML = '';\r\n            const formData = {\r\n                user: localStorage.getItem('employeeId'),\r\n                ownerName: localStorage.getItem('employeeName'),\r\n                sessionId: '' + new Date().getTime() + '',\r\n                startDate: new Date(startDate.toDateString()).getTime(),\r\n                startTime: new Date(startDate).getTime(),\r\n                endDate: new Date(endDate.toDateString()).getTime(),\r\n                endTime: new Date(endDate).getTime(),\r\n                sessionName: sessionNameRef.current.value,\r\n            };\r\n\r\n            await addSession({ ...formData });\r\n            closeModal();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Btn\r\n                onClick={() => openModal()}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n            >\r\n                Schedule A Session\r\n            </Btn>\r\n            <Modal\r\n                headerTitle={'Schedule Session'}\r\n                textCOnfirm={'Schedule'}\r\n                textCancel={'Cancel'}\r\n                handleConfirm={handleConfirmSession}\r\n                handleClose={closeModal}\r\n                openModal={open}\r\n            >\r\n                <>\r\n                    <form>\r\n                        <Box display=\"flex\" flexDirection=\"column\">\r\n                            <TextField\r\n                                id=\"sessionName\"\r\n                                label=\"Session Name\"\r\n                                multiline\r\n                                rows={4}\r\n                                variant=\"outlined\"\r\n                                inputRef={sessionNameRef}\r\n                            />\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardDateTimePicker\r\n                                    margin=\"normal\"\r\n                                    id=\"startDate\"\r\n                                    label=\"Start Date & Time\"\r\n                                    value={startDate}\r\n                                    onChange={handleStartDate}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                                <KeyboardDateTimePicker\r\n                                    margin=\"normal\"\r\n                                    id=\"endDate\"\r\n                                    label=\"End Date & Time\"\r\n                                    value={endDate}\r\n                                    onChange={handleEndDate}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </Box>\r\n                        <div ref={errorRef} style={{ color: 'red' }}></div>\r\n                    </form>\r\n                </>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ScheduleSession;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport Btn from './../../../utils/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport { getTitle, getIcons, getTime } from './../../../helpers';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {\r\n    getSessionsLive,\r\n    updateSessionStatus,\r\n    markPresent,\r\n} from './../../../firebase/firebaseService';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SessionList = () => {\r\n    const history = useHistory();\r\n    const [sessionList, setSessionList] = useState([]);\r\n    const userId = localStorage.getItem('employeeId');\r\n    const getLiveSessionData = () => {\r\n        const liveData = getSessionsLive(\r\n            new Date(new Date().toDateString()).getTime()\r\n        );\r\n        liveData.onSnapshot((querySnapShot) => {\r\n            let sessionList = [];\r\n\r\n            querySnapShot.forEach((doc) => {\r\n                sessionList.push(doc.data());\r\n            });\r\n            setSessionList(sessionList);\r\n        });\r\n    };\r\n\r\n    useEffect(() => getLiveSessionData(), []);\r\n\r\n    const startSession = async (sessionId, ownerId) => {\r\n        await updateSessionStatus(userId, sessionId, 'active');\r\n        if (ownerId !== userId) {\r\n            await markPresent(\r\n                sessionId,\r\n                userId,\r\n                localStorage.getItem('employeeName')\r\n            );\r\n        }\r\n        localStorage.setItem('activeSessionId', sessionId);\r\n        localStorage.setItem('sessionOwnerId', ownerId);\r\n\r\n        history.push('/SessionRoom');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {sessionList.map((data, index) => {\r\n                return (\r\n                    <Grid key={index} container spacing={1}>\r\n                        <Grid item xs={0} sm={0} className=\"timelineY\"></Grid>\r\n                        <Grid item xs={1} sm={1} className=\"timelineX\"></Grid>\r\n                        <Grid item xs={10} sm={10}>\r\n                            <Box mb={2} display=\"flex\" flexDirection=\"column\">\r\n                                <Box display=\"flex\" flexDirection=\"row\">\r\n                                    {getIcons('AccessAlarmIcon', {\r\n                                        color: 'disabled',\r\n                                    })}\r\n                                    <Typography\r\n                                        style={{ color: '#797979' }}\r\n                                        variant=\"button\"\r\n                                        gutterBottom\r\n                                    >\r\n                                        {getTime(\r\n                                            new Date(data.startTime)\r\n                                                .toTimeString()\r\n                                                .split(' ')[0]\r\n                                        )}{' '}\r\n                                        -{' '}\r\n                                        {getTime(\r\n                                            new Date(data.endTime)\r\n                                                .toTimeString()\r\n                                                .split(' ')[0]\r\n                                        )}\r\n                                    </Typography>\r\n                                </Box>\r\n                                <Card elevation={2}>\r\n                                    <CardHeader\r\n                                        avatar={\r\n                                            <Avatar\r\n                                                variant=\"rounded\"\r\n                                                aria-label=\"recipe\"\r\n                                            >\r\n                                                R\r\n                                            </Avatar>\r\n                                        }\r\n                                        title={data.sessionName}\r\n                                        subheader={data.ownerName}\r\n                                    />\r\n                                    <Box\r\n                                        display=\"flex\"\r\n                                        flexDirection=\"row\"\r\n                                        justifyContent=\"flex-end\"\r\n                                        pb={1}\r\n                                        pr={1}\r\n                                    >\r\n                                        {data.status === 'active' ? (\r\n                                            <Box\r\n                                                display=\"flex\"\r\n                                                justifyContent=\"justify-center\"\r\n                                                p={1}\r\n                                            >\r\n                                                {getIcons('Dot', {\r\n                                                    color: 'error',\r\n                                                })}{' '}\r\n                                                Live\r\n                                            </Box>\r\n                                        ) : null}\r\n                                        {userId === data.ownerId ? (\r\n                                            <Btn\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                disabled={\r\n                                                    data.status === 'active' ||\r\n                                                    data.status === 'closed' ||\r\n                                                    data.status === 'expired'\r\n                                                }\r\n                                                onClick={() =>\r\n                                                    startSession(\r\n                                                        data.sessionId,\r\n                                                        data.ownerId\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                {data.status === 'off'\r\n                                                    ? 'Start Session'\r\n                                                    : data.status === 'expired'\r\n                                                    ? 'Session Expired'\r\n                                                    : data.status === 'closed'\r\n                                                    ? 'Closed'\r\n                                                    : 'Active'}\r\n                                            </Btn>\r\n                                        ) : (\r\n                                            <Btn\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                disabled={\r\n                                                    data.status === 'expired' ||\r\n                                                    data.status === 'closed' ||\r\n                                                    data.status === 'off'\r\n                                                }\r\n                                                onClick={() =>\r\n                                                    startSession(\r\n                                                        data.sessionId,\r\n                                                        data.ownerId\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                {data.status === 'off' ||\r\n                                                data.status === 'active'\r\n                                                    ? 'Join Session'\r\n                                                    : data.status === 'expired'\r\n                                                    ? 'Session Expired'\r\n                                                    : 'Session Closed'}\r\n                                            </Btn>\r\n                                        )}\r\n                                    </Box>\r\n                                </Card>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SessionList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './index.css';\r\nimport Btn from './../../utils/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport { getTitle, getIcons } from './../../helpers';\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport ScheduleSession from './ScheduleSession';\r\n\r\nimport { getSessions } from './../../firebase/firebaseService';\r\nimport SessionList from './SessionList';\r\n\r\nconst Home = () => {\r\n    console.log('Home executed');\r\n    return (\r\n        <>\r\n            <Paper>\r\n                <Box\r\n                    display=\"flex\"\r\n                    flexDirection=\"column\"\r\n                    mx=\"auto\"\r\n                    px={2}\r\n                    pb={2}\r\n                    justifyContent=\"center\"\r\n                >\r\n                    <p>Schedule a new session as you plan to host</p>\r\n                    <ScheduleSession />\r\n                </Box>\r\n            </Paper>\r\n            {getTitle(\"Today's Sessions\")}\r\n            <Box mb={2} display=\"flex\" flexDirection=\"row\">\r\n                {getIcons('DateRangeIcon')}\r\n                <Typography gutterBottom>\r\n                    {new Date().toDateString()}\r\n                </Typography>\r\n            </Box>\r\n            <>\r\n                <SessionList />\r\n            </>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport { getTitle, getIcons, getTime } from './../../../helpers';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport {\r\n    getParticipantLive,\r\n    removeParticipant,\r\n} from './../../../firebase/firebaseService';\r\nimport Modal from './../../../utils/Modal';\r\n\r\nconst ParticipantList = ({ sessionId }) => {\r\n    const [participantsList, setParticipantList] = useState([]);\r\n    const [openAttendance, setOpenAttendance] = useState(false);\r\n    const [selectedParticipant, setSelectedParticipant] = useState();\r\n\r\n    const getLiveParticipantsList = (sessionId) => {\r\n        const liveData = getParticipantLive(sessionId);\r\n        liveData.onSnapshot((querySnapShot) => {\r\n            let participantList = [];\r\n\r\n            querySnapShot.forEach((doc) => {\r\n                participantList.push(doc.data());\r\n            });\r\n            setParticipantList(participantList);\r\n        });\r\n    };\r\n    const handleMarkAbsent = (empId) => {\r\n        setSelectedParticipant(empId);\r\n        setOpenAttendance(true);\r\n    };\r\n    const markAbsent = async () => {\r\n        await removeParticipant(sessionId, selectedParticipant);\r\n        setOpenAttendance(false);\r\n    };\r\n\r\n    useEffect(() => getLiveParticipantsList(sessionId), [sessionId]);\r\n\r\n    return (\r\n        <>\r\n            <List style={{ paddingTop: 0 }}>\r\n                {participantsList.map((data, index) => {\r\n                    return (\r\n                        <Box key={index}>\r\n                            <Divider />\r\n                            <ListItem style={{ paddingLeft: 0 }}>\r\n                                {data.empName}\r\n                                <ListItemSecondaryAction\r\n                                    onClick={() => handleMarkAbsent(data.empId)}\r\n                                >\r\n                                    <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                        {getIcons('RemoveUser', {\r\n                                            color: 'error',\r\n                                        })}\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </Box>\r\n                    );\r\n                })}\r\n            </List>\r\n            <Modal\r\n                headerTitle={'Mark Absent'}\r\n                textCOnfirm={'Confirm'}\r\n                textCancel={'Cancel'}\r\n                handleConfirm={() => markAbsent()}\r\n                handleClose={() => setOpenAttendance(false)}\r\n                openModal={openAttendance}\r\n            >\r\n                <>\r\n                    Are you sure you want to remove the participant from\r\n                    session? This will mark the participant as absent.\r\n                </>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ParticipantList;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Btn from './../../../utils/Button';\r\nimport { updateSessionStatus } from './../../../firebase/firebaseService';\r\n\r\nconst HaltAttendance = () => {\r\n    const [halt, setHalt] = useState('Stop');\r\n    useEffect(() => {}, [halt]);\r\n\r\n    const handleRequest = () => {\r\n        updateSessionStatus(\r\n            localStorage.getItem('sessionOwnerId'),\r\n            localStorage.getItem('activeSessionId'),\r\n            halt === 'Stop' ? 'expired' : 'active'\r\n        );\r\n        setHalt(halt === 'Stop' ? 'Start' : 'Stop');\r\n    };\r\n\r\n    return (\r\n        <Btn\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => handleRequest()}\r\n        >\r\n            {halt} Attendance\r\n        </Btn>\r\n    );\r\n};\r\n\r\nexport default HaltAttendance;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Btn from './../../utils/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport { getTitle, getIcons, getTime } from './../../helpers';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ParticipantList from './ParticipantList';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport HaltAttendance from './HaltAttendance';\r\n\r\nimport {\r\n    getSessionDetails,\r\n    getParticipantLive,\r\n    getSessionStatusLive,\r\n    updateSessionStatus,\r\n    removeParticipant,\r\n} from './../../firebase/firebaseService';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SessionRoom = () => {\r\n    const [sessionDetails, setSessionDetails] = useState({});\r\n    // const [showSnack, setShowSnack] = useState(false);\r\n    const history = useHistory();\r\n    const getSessionDetailFunc = useCallback(async () => {\r\n        if (\r\n            localStorage.getItem('activeSessionId') &&\r\n            localStorage.getItem('sessionOwnerId')\r\n        ) {\r\n            const sessionDetails = await getSessionDetails(\r\n                localStorage.getItem('sessionOwnerId'),\r\n                localStorage.getItem('activeSessionId')\r\n            );\r\n            if (\r\n                sessionDetails.data().status === 'active' ||\r\n                sessionDetails.data().status === 'expired'\r\n            ) {\r\n                setSessionDetails(sessionDetails.data());\r\n                getSessionStatusOnlineLive(); // set live counter for status change\r\n            } else if (sessionDetails.data().status === 'off') {\r\n                localStorage.removeItem('sessionOwnerId');\r\n                localStorage.removeItem('activeSessionId');\r\n            } else if (sessionDetails.data().status === 'closed') {\r\n                setSessionDetails({});\r\n                if (\r\n                    localStorage.getItem('sessionOwnerId') ||\r\n                    localStorage.getItem('activeSessionId')\r\n                ) {\r\n                    localStorage.removeItem('sessionOwnerId');\r\n                    localStorage.removeItem('activeSessionId');\r\n                }\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const closeAndRedirectHome = () => {\r\n        setSessionDetails({});\r\n        localStorage.removeItem('activeSessionId');\r\n        localStorage.removeItem('sessionOwnerId');\r\n        // setShowSnack(true);\r\n        history.push('/Home');\r\n    };\r\n\r\n    const getSessionStatusOnlineLive = () => {\r\n        const liveData = getSessionStatusLive(\r\n            localStorage.getItem('sessionOwnerId'),\r\n            localStorage.getItem('activeSessionId')\r\n        );\r\n        liveData.onSnapshot((doc) => {\r\n            if (doc.data().status === 'closed') {\r\n                closeAndRedirectHome();\r\n            }\r\n        });\r\n    };\r\n\r\n    const getLiveParticipantsList = () => {\r\n        if (\r\n            localStorage.getItem('sessionOwnerId') &&\r\n            localStorage.getItem('sessionOwnerId') !==\r\n                localStorage.getItem('employeeId')\r\n        ) {\r\n            const liveData = getParticipantLive(\r\n                localStorage.getItem('activeSessionId')\r\n            );\r\n            liveData.onSnapshot((querySnapShot) => {\r\n                let participantList = [];\r\n\r\n                querySnapShot.forEach((doc) => {\r\n                    participantList.push(doc.data().empId);\r\n                });\r\n\r\n                if (\r\n                    participantList.find(\r\n                        (el) => el === localStorage.getItem('employeeId')\r\n                    ) === undefined\r\n                ) {\r\n                    // navigate out to home page\r\n                    closeAndRedirectHome();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const closeSession = async () => {\r\n        await updateSessionStatus(\r\n            localStorage.getItem('sessionOwnerId'),\r\n            localStorage.getItem('activeSessionId'),\r\n            'closed'\r\n        );\r\n        closeAndRedirectHome();\r\n    };\r\n\r\n    const exitSession = async () => {\r\n        await removeParticipant(\r\n            localStorage.getItem('activeSessionId'),\r\n            localStorage.getItem('employeeId')\r\n        );\r\n        closeAndRedirectHome();\r\n    };\r\n\r\n    useEffect(() => getSessionDetailFunc(), [getSessionDetailFunc]);\r\n    useEffect(() => getLiveParticipantsList(), []);\r\n\r\n    return Object.keys(sessionDetails).length === 0 ? (\r\n        <>\r\n            You have not joined any active session or the session is yet to be\r\n            started by the host.\r\n        </>\r\n    ) : (\r\n        <>\r\n            {localStorage.getItem('sessionOwnerId') ===\r\n            localStorage.getItem('employeeId') ? (\r\n                <>\r\n                    <Btn\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => closeSession()}\r\n                    >\r\n                        Stop Session\r\n                    </Btn>\r\n                </>\r\n            ) : (\r\n                <Box\r\n                    display=\"flex\"\r\n                    flexDirection=\"row\"\r\n                    justifyContent=\"space-between\"\r\n                >\r\n                    <Box display=\"flex\" justifyContent=\"justify-center\" p={1}>\r\n                        {getIcons('Dot', {\r\n                            color: 'error',\r\n                        })}{' '}\r\n                        Live\r\n                    </Box>\r\n                    <Btn\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => exitSession()}\r\n                    >\r\n                        Exit Session\r\n                    </Btn>\r\n                </Box>\r\n            )}\r\n\r\n            {getTitle('Session Details')}\r\n            <Card elevation={2}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar variant=\"rounded\" aria-label=\"recipe\">\r\n                            R\r\n                        </Avatar>\r\n                    }\r\n                    title={sessionDetails.sessionName}\r\n                    subheader={sessionDetails.ownerName}\r\n                />\r\n                <Box\r\n                    display=\"flex\"\r\n                    flexDirection=\"row\"\r\n                    justifyContent=\"flex-end\"\r\n                    pb={1}\r\n                    pr={1}\r\n                ></Box>\r\n            </Card>\r\n            {getTitle('Session Quiz')}\r\n            <>No quizes allocated till now.</>\r\n\r\n            {localStorage.getItem('sessionOwnerId') ===\r\n            localStorage.getItem('employeeId') ? (\r\n                <>\r\n                    {getTitle('Participants')}\r\n                    <HaltAttendance />\r\n                    <Box mt={1}>\r\n                        <ParticipantList sessionId={sessionDetails.sessionId} />\r\n                    </Box>\r\n                </>\r\n            ) : null}\r\n            {/* <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                open={showSnack}\r\n                onClose={setShowSnack(false)}\r\n                message=\"You have been logged out of session !\"\r\n            /> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SessionRoom;\r\n","import React from 'react';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Box from '@material-ui/core/Box';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { getTitleSm, getTitle, getIcons, getTime } from './../../../helpers';\r\nimport { Typography } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nconst DetailReport = ({ session, handleClose, open, pList }) => {\r\n    const { sessionName, startTime, endTime, startDate } = session;\r\n\r\n    return (\r\n        <Dialog fullScreen open={open} onClose={handleClose}>\r\n            <AppBar>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={handleClose}\r\n                        aria-label=\"close\"\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box mt={8}>\r\n                <DialogContent>\r\n                    {getTitleSm('Session Details')}\r\n                    <Box>\r\n                        <h4>{sessionName}</h4>\r\n                        <Box>{new Date(startDate).toDateString()}</Box>\r\n                        <Typography\r\n                            style={{ color: '#797979' }}\r\n                            variant=\"button\"\r\n                            gutterBottom\r\n                        >\r\n                            {getTime(\r\n                                new Date(startTime).toTimeString().split(' ')[0]\r\n                            )}{' '}\r\n                            -{' '}\r\n                            {getTime(\r\n                                new Date(endTime).toTimeString().split(' ')[0]\r\n                            )}\r\n                        </Typography>\r\n                    </Box>\r\n                    {getTitle('Participants (' + pList.length + ')')}\r\n                    {pList.length !== 0 ? (\r\n                        <>\r\n                            {pList.map((el, index) => {\r\n                                return (\r\n                                    <List key={index}>\r\n                                        <ListItem\r\n                                            style={{\r\n                                                paddingLeft: 0,\r\n                                                paddingRight: 30,\r\n                                            }}\r\n                                        >\r\n                                            {getIcons('User')}\r\n                                            <span style={{ paddingLeft: 5 }}>\r\n                                                {el.empName}\r\n                                            </span>\r\n                                        </ListItem>\r\n                                        <Divider />\r\n                                    </List>\r\n                                );\r\n                            })}\r\n                        </>\r\n                    ) : (\r\n                        <> No participants</>\r\n                    )}\r\n                </DialogContent>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default DetailReport;\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport { getIcons } from './../../../helpers';\r\nimport DetailReport from './../DetailReport';\r\nimport { getParticipantLive } from './../../../firebase/firebaseService';\r\n\r\nconst DetailWrapper = ({ session }) => {\r\n    const [openDetails, setOpenDetails] = useState(false);\r\n    const [pList, setPlist] = useState([]);\r\n\r\n    const getParicipantList = useCallback(async (sessionId) => {\r\n        const snapShot = await getParticipantLive(sessionId).get();\r\n        const pListTemp = [];\r\n        snapShot.forEach((el) => {\r\n            pListTemp.push(el.data());\r\n        });\r\n        setPlist(pListTemp);\r\n    }, []);\r\n    const handleOpenReport = async () => {\r\n        await getParicipantList(session.sessionId);\r\n        setOpenDetails(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ListItemSecondaryAction\r\n                style={{ right: 0 }}\r\n                onClick={() => handleOpenReport()}\r\n            >\r\n                {getIcons('Details')}\r\n            </ListItemSecondaryAction>\r\n            <DetailReport\r\n                session={session}\r\n                open={openDetails}\r\n                handleClose={() => setOpenDetails(false)}\r\n                pList={pList}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DetailWrapper;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getTitleSm, getIcons, getTime } from './../../helpers';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Box from '@material-ui/core/Box';\r\nimport DetailWrapper from './DetailWrapper';\r\nimport { getSessionReport } from './../../firebase/firebaseService';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nconst Report = () => {\r\n    const [reportList, setReportList] = useState({});\r\n\r\n    const GetSessionReportData = async () => {\r\n        const reportList = await getSessionReport(\r\n            localStorage.getItem('employeeId')\r\n        );\r\n        const reportListObj = {};\r\n        if (reportList.length !== 0) {\r\n            reportList.forEach((data) => {\r\n                if (reportListObj[data.startDate]) {\r\n                    reportListObj[data.startDate] = [\r\n                        ...reportListObj[data.startDate],\r\n                        data,\r\n                    ];\r\n                } else {\r\n                    reportListObj[data.startDate] = [data];\r\n                }\r\n            });\r\n        }\r\n\r\n        setReportList(reportListObj);\r\n    };\r\n    useEffect(() => GetSessionReportData(), []);\r\n    return (\r\n        <>\r\n            {Object.keys(reportList).length !== 0 ? (\r\n                <>\r\n                    {Object.keys(reportList)\r\n                        .reverse()\r\n                        .map((data, index) => {\r\n                            return (\r\n                                <Box key={index}>\r\n                                    {getTitleSm(\r\n                                        new Date(Number(data)).toDateString()\r\n                                    )}\r\n                                    <List>\r\n                                        {reportList[data].map((doc, index) => (\r\n                                            <Box key={index}>\r\n                                                <ListItem\r\n                                                    style={{\r\n                                                        paddingLeft: 0,\r\n                                                        paddingRight: 30,\r\n                                                    }}\r\n                                                >\r\n                                                    <ListItemAvatar\r\n                                                        style={{ minWidth: 35 }}\r\n                                                    >\r\n                                                        {getIcons('Session')}\r\n                                                    </ListItemAvatar>\r\n                                                    {doc.sessionName}\r\n                                                    <DetailWrapper\r\n                                                        session={doc}\r\n                                                    />\r\n                                                </ListItem>\r\n                                                <Divider />\r\n                                            </Box>\r\n                                        ))}\r\n                                    </List>\r\n                                </Box>\r\n                            );\r\n                        })}\r\n                </>\r\n            ) : (\r\n                <>You have not hosted any sessions yet.</>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Report;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport Home from './../Home';\r\nimport SessionRoom from './../SessionRoom';\r\nimport Report from './../Report';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst ContentHolder = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n            <Route path=\"/Home\">\r\n                <Home />\r\n            </Route>\r\n            <Route path=\"/SessionRoom\">\r\n                <SessionRoom />\r\n            </Route>\r\n            <Route path=\"/Report\">\r\n                <Report />\r\n            </Route>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default ContentHolder;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Header from './../Header';\r\nimport Navigator from './../Navigator';\r\nimport ContentHolder from './../ContentHolder';\r\nimport './index.css';\r\n\r\nimport { getIcons } from './../../helpers';\r\n\r\nconst Landing = () => {\r\n    const [openNav, setOpenNav] = useState(false);\r\n\r\n    const handleNavigationState = (val) => {\r\n        console.log(val);\r\n        setOpenNav(val);\r\n    };\r\n\r\n    console.log('Landing rendered');\r\n    return (\r\n        <div className=\"landingPage\">\r\n            <Header\r\n                handleNavigation={(val) => handleNavigationState(val)}\r\n                openNav={openNav}\r\n            />\r\n            <Navigator\r\n                handleNavigation={(val) => handleNavigationState(val)}\r\n                openNav={openNav}\r\n            />\r\n            <ContentHolder />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { useRef, useContext } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { addEmployee, checkEmployee } from './../../firebase/firebaseService';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://github.com/joyjd/st\">\r\n                GuidePRO\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Login = ({ onLoginFunc }) => {\r\n    const classes = useStyles();\r\n\r\n    const empName = useRef();\r\n    const empId = useRef();\r\n    // const ctx = useContext(AuthContext);\r\n\r\n    const loginFormHandler = async (event) => {\r\n        event.preventDefault();\r\n        const employeeName = empName.current.value;\r\n        const employeeId = empId.current.value;\r\n        const checkResult = await checkEmployee(employeeId);\r\n        if (checkResult === undefined) {\r\n            await addEmployee(employeeId, employeeName);\r\n            //set with new details\r\n            onLoginFunc(employeeName, employeeId);\r\n        } else {\r\n            //set to logged in\r\n            onLoginFunc(checkResult.empName, checkResult.empId);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Log in\r\n                </Typography>\r\n                <form onSubmit={loginFormHandler} className={classes.form}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"Employee Name\"\r\n                        name=\"Name\"\r\n                        inputRef={empName}\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"Employee Id\"\r\n                        label=\"Employee Id\"\r\n                        id=\"empId\"\r\n                        inputRef={empId}\r\n                    />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Log In\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const loginHandler = (employeeName, employeeId) => {\r\n        localStorage.setItem('isLoggedIn', true);\r\n        localStorage.setItem('employeeName', employeeName);\r\n        localStorage.setItem('employeeId', employeeId);\r\n        setIsLoggedIn(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const storedLogInfo = localStorage.getItem('isLoggedIn');\r\n        if (storedLogInfo) {\r\n            setIsLoggedIn(true);\r\n        }\r\n    }, []);\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                isLoggedIn: isLoggedIn,\r\n                onLogin: loginHandler,\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;\r\n","import React, { useRef, useContext } from 'react';\nimport './App.css';\nimport Landing from './components/LandingPage';\nimport Login from './components/Login';\nimport AuthContext from './store/auth-context';\n\nconst App = () => {\n    const ctx = useContext(AuthContext);\n    //localStorage.clear();\n    return ctx.isLoggedIn ? <Landing /> : <Login onLoginFunc={ctx.onLogin} />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { AuthContextProvider } from './store/auth-context';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <AuthContextProvider>\n                <App />\n            </AuthContextProvider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}